{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Financial Transaction API",
    "description": "API for managing financial transactions."
  },
  "host": "localhost:8080",
  "basePath": "/v1",
  "schemes": ["http"],
  "paths": {
    "/transactions": {
      "get": {
        "summary": "Retrieve all transactions",
        "description": "Retrieve all transactions with optional filters for date range and type.",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "type": "string",
            "description": "Filter by transaction type ('debit' or 'credit')."
          },
          {
            "name": "startDate",
            "in": "query",
            "type": "string",
            "format": "date",
            "description": "Filter transactions created after this date."
          },
          {
            "name": "endDate",
            "in": "query",
            "type": "string",
            "format": "date",
            "description": "Filter transactions created before this date."
          },
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "description": "Page number for pagination."
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "description": "Number of transactions per page."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": { "$ref": "#/definitions/Transaction" }
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "current": { "type": "string" },
                    "prev": { "type": "string" },
                    "next": { "type": "string" }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No transactions available for the specified filters."
          }
        }
      },
      "post": {
        "summary": "Create a new transaction",
        "description": "Create a new financial transaction. The type must be either 'debit' or 'credit'.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Transaction created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "transactionID": { "type": "integer" }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "object",
                  "additionalProperties": { "type": "string" }
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Transaction": {
      "type": "object",
      "properties": {
        "accountNumberFrom": { "type": "string" },
        "accountTypeFrom": { "type": "string" },
        "accountNumberTo": { "type": "string" },
        "accountTypeTo": { "type": "string" },
        "type": {
          "type": "string",
          "enum": ["debit", "credit"],
          "description": "Transaction type ('debit' or 'credit')."
        },
        "amount": { "type": "number" },
        "description": { "type": "string" }
      },
      "required": ["accountNumberFrom", "accountTypeFrom", "accountNumberTo", "accountTypeTo", "type", "amount", "description"]
    }
  }
}
